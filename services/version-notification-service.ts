import { Alert } from 'react-native';
import { useVersionStore } from '../stores/version-store';

export const VersionNotificationService = {
  checkAndShowUpdateNotification: () => {
    const { checkForVersionUpdate, currentVersion, previousVersion, markNotificationShown } = useVersionStore.getState();
    
    if (checkForVersionUpdate()) {
      Alert.alert(
        'ðŸŽ‰ Nueva versiÃ³n instalada',
        `Has actualizado la app de la versiÃ³n ${previousVersion} a la ${currentVersion}.\n\nâœ¨ Â¡Disfruta de las nuevas funciones y mejoras!`,
        [
          {
            text: 'Ver cambios',
            onPress: () => {
              // AquÃ­ se podrÃ­a navegar a una pantalla de changelog
              Alert.alert(
                'ðŸ“‹ Cambios en v1.4.0',
                'â€¢ Sistema de notificaciÃ³n de actualizaciones\nâ€¢ Eliminado botÃ³n debug que causaba interferencias\nâ€¢ Sistema de seguimiento de versiones\nâ€¢ OptimizaciÃ³n del widget con datos dinÃ¡micos'
              );
            },
          },
          {
            text: 'Entendido',
            style: 'default',
          },
        ]
      );
      
      markNotificationShown();
    }
  },

  // FunciÃ³n para simular una actualizaciÃ³n (Ãºtil para testing)
  simulateUpdate: (newVersion: string) => {
    const { updateVersion } = useVersionStore.getState();
    updateVersion(newVersion);
  },

  // FunciÃ³n para obtener informaciÃ³n de la versiÃ³n actual
  getVersionInfo: () => {
    const { currentVersion, previousVersion, isFirstLaunch } = useVersionStore.getState();
    return {
      currentVersion,
      previousVersion,
      isFirstLaunch,
    };
  },
};
